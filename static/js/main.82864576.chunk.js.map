{"version":3,"sources":["store/manifest.ts","store/photos.ts","store/search-filters.ts","components/FiltersView.tsx","services/photo-service.ts","components/ManifestView.tsx","components/PhotosView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Manifest","data","makeAutoObservable","this","Photos","items","page","item","push","i","length","SearchFilters","rover","camera","sol","console","log","FiltersView","observer","filters","photos","useState","setCameras","useEffect","uniqueCameras","_","uniq","map","d","name","className","Select","label","value","onChange","e","setRover","target","MenuItem","API_URL","API_KEY","getPhotos","filter","a","url","toLowerCase","dayjs","earth_date","format","axios","method","DebugView","JSON","stringify","ManifestView","manifest","then","photo_manifest","set","landing_date","launch_date","status","max_sol","max_date","total_photos","chartRef","useRef","current","spec","$schema","values","date","config","background","vconcat","width","height","transform","param","mark","type","color","encoding","x","field","axis","y","title","tooltip","params","select","encodings","window","vegaEmbed","actions","theme","view","addEventListener","event","datum","setSol","ref","style","paddingLeft","PhotoView","photo","onClickPhoto","backgroundImage","setBackground","reveal","setReveal","src","img_src","img","Image","onload","onClick","hidden","PhotosView","undefined","selectedPhoto","setSelectedPhoto","res","setPage","selectPhoto","pages","Math","floor","Button","slice","id","alt","searchFilters","createMuiTheme","palette","primary","main","App","tab","setTab","ThemeProvider","classNames","View","View__active","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82864576.chunk.js","sourcesContent":["import { makeAutoObservable } from 'mobx'\n\nclass Manifest {\n    data: any = {}\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    set(data) {\n        this.data = data\n    }\n}\n\nexport default Manifest\n","import { makeAutoObservable } from 'mobx'\n\nclass Photos {\n    items: Array<string> = []\n    page: number = 0\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    set(items) {\n        this.items = items\n    }\n\n    add(item) {\n        this.items.push(item)\n    }\n\n    reset() {\n        this.items = []\n    }\n\n    setPage(i) {\n        if (i < 0) i = 0\n        if (i >= this.items.length) i = this.items.length - 1\n        this.page = i\n    }\n}\n\nexport default Photos\n","import { makeAutoObservable } from 'mobx'\n\nclass SearchFilters {\n    rover: string = 'perseverance'\n    camera: string = ''\n    sol: number = 1\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setRover(rover) {\n        this.rover = rover\n        this.sol = 1\n        console.log('setRover', rover)\n    }\n\n    setCamera(camera) {\n        this.camera = camera\n        console.log('setCamera', camera)\n    }\n\n    setSol(sol) {\n        this.sol = sol\n        console.log('setSol', sol)\n    }\n}\n\nexport default SearchFilters\n","import React, { useState, useEffect, useRef } from 'react'\nimport _ from 'lodash'\nimport { Button, TextField, Select, MenuItem } from '@material-ui/core'\nimport { observer } from 'mobx-react'\n\nexport const FiltersView = observer(({ filters, photos }) => {\n    const [cameras, setCameras] = useState<string[]>([])\n    useEffect(() => {\n        const uniqueCameras = _.uniq(photos.items.map((d) => d.camera.name))\n        setCameras(['', ...uniqueCameras])\n    }, [photos.items])\n    return (\n        <div className=\"Filters\">\n            <div className=\"Filters__item\">\n                <Select\n                    label=\"Rover\"\n                    value={filters.rover}\n                    onChange={(e) => filters.setRover(e.target.value)}\n                >\n                    <MenuItem value=\"perseverance\">Perseverance</MenuItem>\n                    <MenuItem value=\"curiosity\">Curiosity</MenuItem>\n                    <MenuItem value=\"opportunity\">Opportunity</MenuItem>\n                    <MenuItem value=\"spirit\">Spirit</MenuItem>\n                </Select>\n            </div>\n            {false && (\n                <div className=\"Filters__item\">\n                    <Select\n                        label=\"Camera\"\n                        value={filters.camera}\n                        onChange={(e) => filters.setCamera(e.target.value)}\n                    >\n                        {cameras.map((camera) => (\n                            <MenuItem value={camera}>\n                                {camera || 'All'}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </div>\n            )}\n            {false && (\n                <div className=\"Filters__item\">\n                    <TextField\n                        label=\"Sol\"\n                        value={filters.sol}\n                        onChange={(e) => filters.setSol(e.target.value)}\n                        type=\"number\"\n                    />\n                </div>\n            )}\n        </div>\n    )\n})\n","import axios from 'axios'\nimport dayjs from 'dayjs'\nimport { SearchFilter } from '../models/SearchFilter'\n\nconst API_URL: string = 'https://api.nasa.gov/mars-photos/api/v1/'\nconst API_KEY: string = 'wwYXJBLASfX4wNrbLfEetDdx6U3EbRSm1Lx93DGa'\n\nexport const getPhotos = async (filter: SearchFilter) => {\n    let url: string =\n        API_URL + 'rovers/' + filter.rover.toLowerCase() + '/photos?'\n    if (filter.camera) {\n        url += 'camera=' + filter.camera\n    }\n    if (filter.sol != null) {\n        url += '&sol=' + filter.sol\n    } else {\n        url += '&earth_date=' + dayjs(filter.earth_date).format('YYYY-M-D')\n    }\n    url += `&api_key=${API_KEY || 'DEMO_KEY'}`\n    return axios({\n        method: 'GET',\n        url: url,\n    })\n}\n\nexport const getManifest = function (rover: string) {\n    return axios({\n        method: 'GET',\n        url:\n            API_URL +\n            'manifests/' +\n            rover.toLowerCase() +\n            '?api_key=' +\n            (API_KEY || 'DEMO_KEY'),\n    }).then(function ({ data }) {\n        return data.photo_manifest\n    })\n}\n","import './ManifestView.css'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { getManifest } from '../services/photo-service'\nimport { observer } from 'mobx-react'\n\ndeclare global {\n    interface Window {\n        vegaEmbed: any\n    }\n}\n\nconst DebugView = (data) => (\n    <div>\n        <pre>{JSON.stringify(data.data, null, 2)}</pre>\n    </div>\n)\n\nexport const ManifestView = observer(({ manifest, filters }) => {\n    useEffect(() => {\n        getManifest(filters.rover).then((d) => {\n            manifest.set(d)\n        })\n    }, [filters.rover, manifest])\n    const {\n        name,\n        landing_date,\n        launch_date,\n        status,\n        max_sol,\n        max_date,\n        total_photos,\n        photos,\n    } = manifest.data\n    const data = {\n        name,\n        landing_date,\n        launch_date,\n        status,\n        max_sol,\n        max_date,\n        total_photos,\n    }\n    // { photos ? <DebugView data={photos} /> : '' }\n    const chartRef = useRef(null)\n    if (chartRef.current && photos) {\n        const values = photos.map((d) => ({\n            sol: d.sol,\n            date: d.earth_date,\n            value: d.total_photos,\n        }))\n        const spec = {\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            data: { values },\n            config: {\n                background: null,\n            },\n            vconcat: [\n                {\n                    width: 800,\n                    height: 400,\n                    transform: [{ filter: { param: 'brush' } }],\n                    mark: {\n                        type: 'bar',\n                        color: 'rgb(153, 45, 50)',\n                    },\n                    encoding: {\n                        x: {\n                            field: 'sol',\n                            type: 'nominal',\n                            axis: false && {\n                                title: 'Martian Sol',\n                            },\n                        },\n                        y: {\n                            field: 'value',\n                            type: 'quantitative',\n                            axis: {\n                                title: 'Photos',\n                            },\n                        },\n                        tooltip: [\n                            {\n                                field: 'sol',\n                                title: 'Martian Sol',\n                            },\n                            {\n                                field: 'value',\n                                title: 'Photos',\n                            },\n                            {\n                                field: 'date',\n                                title: 'Earth Date',\n                            },\n                        ],\n                    },\n                },\n                {\n                    width: 800,\n                    height: 100,\n                    mark: {\n                        type: 'bar',\n                        color: 'rgb(153, 45, 50)',\n                    },\n                    params: [\n                        {\n                            name: 'brush',\n                            select: { type: 'interval', encodings: ['x'] },\n                        },\n                    ],\n                    encoding: {\n                        x: {\n                            field: 'sol',\n                            type: 'nominal',\n                            axis: false && {\n                                title: 'Martian Sol',\n                            },\n                        },\n                        y: {\n                            field: 'value',\n                            type: 'quantitative',\n                            axis: {\n                                title: 'Photos',\n                            },\n                        },\n                    },\n                },\n            ],\n        }\n        console.log(spec)\n        window\n            .vegaEmbed(chartRef.current, spec, {\n                actions: false,\n                theme: 'dark',\n            })\n            .then(({ view, spec }) => {\n                view.addEventListener('click', (event, item) => {\n                    if (item && item.datum) {\n                        const { sol } = item.datum\n                        if (sol) {\n                            filters.setSol(sol)\n                        }\n                    }\n                })\n            })\n    }\n    // {photos ? `${photos.length} Days` : \"\"}\n    return (\n        <div className=\"Manifest\">\n            <div ref={chartRef}></div>\n            <div style={{ paddingLeft: '1em' }}>\n                <pre>Rover Selected: Curiosity</pre>\n                <pre>Manifest... Loading</pre>\n                <pre>Mission Status... Active</pre>\n                <pre>Most Recent Photo... 2021-03-29</pre>\n                {data.name ? <DebugView data={data} /> : 'Loading...'}\n                <pre>&gt; Select date to view photos</pre>\n            </div>\n        </div>\n    )\n})\n\n// Rover Selected: Perseverance\n\n// Manifest... Loading\n// Mission Status... Active\n// Most Recent Photo... 2018-03-29\n\n// Raw Data...\n","import { useState, useEffect } from 'react'\nimport _ from 'lodash'\nimport { Button } from '@material-ui/core'\nimport { Photo } from '../models/Photo'\nimport { SearchFilter } from '../models/SearchFilter'\nimport { getPhotos } from '../services/photo-service'\nimport { observer } from 'mobx-react'\n\nconst PhotoView = ({ photo, onClickPhoto }) => {\n    const [backgroundImage, setBackground] = useState('black')\n    const [reveal, setReveal] = useState(false)\n    const src = photo.img_src\n    const img = new window.Image()\n    img.onload = () => {\n        setBackground(`url(${src})`)\n        setReveal(true)\n    }\n    img.src = src\n    return (\n        <div\n            className={`Photo ${reveal ? 'Photo--reveal' : ''}`}\n            style={{ backgroundImage }}\n            onClick={() => onClickPhoto(photo)}\n        >\n            <div className=\"Photo__details\">\n                <div hidden> {photo.rover.name} </div>\n                <div> {photo.camera.name} </div>\n                <div> {photo.earth_date} </div>\n            </div>\n        </div>\n    )\n}\n\nexport const PhotosView = observer(({ photos, filters }) => {\n    const [selectedPhoto, setSelectedPhoto] = useState<Photo | undefined>(\n        undefined\n    )\n    useEffect(() => {\n        photos.set([])\n        const params: SearchFilter = {\n            rover: filters.rover,\n            sol: filters.sol,\n        }\n        if (filters.camera) {\n            params.camera = filters.camera\n        }\n        getPhotos(params).then((res) => {\n            console.log(res.data.photos)\n            photos.set(res.data.photos)\n            photos.setPage(0)\n        })\n    }, [filters.rover, filters.camera, filters.sol, photos])\n    const selectPhoto = (photo: Photo | undefined) => {\n        setSelectedPhoto(photo)\n    }\n    const { items, page } = photos\n    if (!items) {\n        return <div>Loading...</div>\n    }\n    const pages = Math.floor(items.length / 6)\n    return (\n        <div className=\"Photos\">\n            {items.length && (\n                <div className=\"Photos__carousel\">\n                    <Button\n                        color=\"primary\"\n                        onClick={() => photos.setPage(page - 6)}\n                    >\n                        Prev\n                    </Button>\n                    <div className=\"Photos__items\">\n                        {items.slice(page, page + 6).map((photo: Photo) => (\n                            <PhotoView\n                                photo={photo}\n                                key={photo.id}\n                                onClickPhoto={selectPhoto}\n                            />\n                        ))}\n                    </div>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => photos.setPage(page + 6)}\n                    >\n                        Next\n                    </Button>\n                </div>\n            )}\n            <div className=\"text-center\" hidden>\n                Page: {Math.floor(page / 6) + 1} / {pages}\n            </div>\n\n            {selectedPhoto ? (\n                <div\n                    className=\"SelectedPhoto\"\n                    onClick={() => selectPhoto(undefined)}\n                >\n                    <img\n                        src={selectedPhoto.img_src}\n                        alt={'Mars Rover Photo ' + selectedPhoto.id}\n                    />\n                </div>\n            ) : (\n                ''\n            )}\n        </div>\n    )\n})\n","import './App.css'\nimport Manifest from './store/manifest'\nimport Photos from './store/photos'\nimport SearchFilters from './store/search-filters'\nimport _ from 'lodash'\nimport { Button } from '@material-ui/core'\nimport { FiltersView } from './components/FiltersView'\nimport { ManifestView } from './components/ManifestView'\nimport { PhotosView } from './components/PhotosView'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport classNames from 'classnames'\n\nconst photos = new Photos()\nconst manifest = new Manifest()\nconst searchFilters = new SearchFilters()\nconst theme = createMuiTheme({\n    palette: { type: 'dark', primary: { main: 'rgb(153, 45, 50)' } },\n})\n\nconst App = () => {\n    const [tab, setTab] = useState('manifest')\n    const changeTab = () => {\n        setTab(tab === 'photos' ? 'manifest' : 'photos')\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <header className=\"App__header\">\n                    <div className=\"container\">Mars Rover Photos</div>\n                </header>\n                <div className=\"App__main\">\n                    <div className=\"NavButton\">\n                        <Button onClick={changeTab}>\n                            {tab === 'photos' ? 'Manifest' : 'Photos'}\n                        </Button>\n                    </div>\n                    <div\n                        className={classNames({\n                            View: true,\n                            View__active: tab === 'photos',\n                        })}\n                    >\n                        <div className=\"container\">\n                            <PhotosView photos={photos} filters={searchFilters} />\n                        </div>\n                    </div>\n                    <div\n                        className={classNames({\n                            View: true,\n                            View__active: tab === 'manifest',\n                        })}\n                    >\n                        <div className=\"container\">\n                            <FiltersView photos={photos} filters={searchFilters} />\n                            <ManifestView\n                                manifest={manifest}\n                                filters={searchFilters}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <a\n                            href=\"https://github.com/simon-lang/mars-rover-photos\"\n                            className=\"credit-link\"\n                        >\n                            simon-lang/mars-rover-photos\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nrequire('./index.css')\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}