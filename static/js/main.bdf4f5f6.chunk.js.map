{"version":3,"sources":["store/manifest.ts","store/search-filters.ts","components/FiltersView.tsx","services/photo-service.ts","components/ManifestView.tsx","components/PhotosView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Manifest","data","makeAutoObservable","this","SearchFilters","rover","camera","sol","console","log","FiltersView","observer","filters","className","Select","label","value","onChange","e","setRover","target","MenuItem","API_URL","API_KEY","fetcher","input","init","a","fetch","res","json","getUrl","filter","toLowerCase","url","dayjs","earth_date","format","DebugView","JSON","stringify","ManifestView","manifest","useEffect","axios","method","then","photo_manifest","d","set","name","landing_date","launch_date","status","max_sol","max_date","total_photos","photos","chartRef","useRef","current","spec","$schema","values","map","date","config","background","vconcat","width","height","transform","param","mark","type","color","encoding","x","field","axis","y","title","tooltip","params","select","encodings","window","vegaEmbed","actions","theme","view","addEventListener","event","item","datum","setSol","navigate","ref","style","paddingLeft","PhotoView","photo","onClickPhoto","useState","backgroundImage","setBackground","reveal","setReveal","src","img_src","img","Image","onload","onClick","missionDates","PhotosView","page","setPage","undefined","selectedPhoto","setSelectedPhoto","useSWR","error","isLoading","isError","usePhotos","selectPhoto","favourites","store","get","items","pages","Math","floor","length","Button","slice","id","hidden","alt","searchFilters","createMuiTheme","palette","primary","main","Splash","clickPhoto","MainView","tab","classNames","View","View__active","NavView","href","routes","App","routeResult","useRoutes","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdf4f5f6.chunk.js","sourcesContent":["import { makeAutoObservable } from 'mobx'\n\nclass Manifest {\n    data: any = {}\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    set(data) {\n        this.data = data\n    }\n}\n\nexport default Manifest\n","import { makeAutoObservable } from 'mobx'\n\nclass SearchFilters {\n    rover: string = 'perseverance'\n    camera: string = ''\n    sol: number = 1\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    setRover(rover) {\n        this.rover = rover\n        this.sol = 1\n        console.log('setRover', rover)\n    }\n\n    setCamera(camera) {\n        this.camera = camera\n        console.log('setCamera', camera)\n    }\n\n    setSol(sol) {\n        this.sol = sol\n        console.log('setSol', sol)\n    }\n}\n\nexport default SearchFilters\n","import { TextField, Select, MenuItem } from '@material-ui/core'\nimport { observer } from 'mobx-react'\n\nexport const FiltersView = observer(({ filters }) => {\n    return (\n        <div className=\"Filters\">\n            <div className=\"Filters__item\">\n                <Select\n                    label=\"Rover\"\n                    value={filters.rover}\n                    onChange={(e) => filters.setRover(e.target.value)}\n                >\n                    <MenuItem value=\"perseverance\">Perseverance</MenuItem>\n                    <MenuItem value=\"curiosity\">Curiosity</MenuItem>\n                    <MenuItem value=\"opportunity\">Opportunity</MenuItem>\n                    <MenuItem value=\"spirit\">Spirit</MenuItem>\n                </Select>\n            </div>\n            {false && (\n                <div className=\"Filters__item\">\n                    <TextField\n                        label=\"Sol\"\n                        value={filters.sol}\n                        onChange={(e) => filters.setSol(e.target.value)}\n                        type=\"number\"\n                    />\n                </div>\n            )}\n        </div>\n    )\n})\n","import axios from 'axios'\nimport dayjs from 'dayjs'\nimport { SearchFilter } from '../models/SearchFilter'\nimport useSWR from 'swr'\n// import { URLSearchParams } from \"url\"\n\nconst API_URL: string = 'https://api.nasa.gov/mars-photos/api/v1/'\nconst API_KEY: string = 'wwYXJBLASfX4wNrbLfEetDdx6U3EbRSm1Lx93DGa'\n\nconst fetcher = async (\n    input: RequestInfo,\n    init: RequestInit,\n    ...args: any[]\n) => {\n    const res = await fetch(input, init)\n    return res.json()\n}\n\nconst getUrl = (filter: SearchFilter) => {\n    const rover = filter.rover.toLowerCase()\n    let url: string = API_URL + 'rovers/' + rover + '/photos?'\n    if (filter.camera) {\n        url += 'camera=' + filter.camera\n    }\n    if (filter.sol != null) {\n        url += '&sol=' + filter.sol\n    } else {\n        url += '&earth_date=' + dayjs(filter.earth_date).format('YYYY-M-D')\n    }\n    url += `&api_key=${API_KEY || 'DEMO_KEY'}`\n    // const queryString = new URLSearchParams(filter).toString()\n    // console.log({queryString})\n    return url\n}\n\nexport const usePhotos = (filter: SearchFilter) => {\n    const url = getUrl(filter)\n    const { data, error } = useSWR(url, fetcher)\n    return {\n        photos: data,\n        isLoading: !error && !data,\n        isError: error,\n    }\n}\n\nexport const getPhotos = async (filter: SearchFilter) => {\n    const url = getUrl(filter)\n    return axios({\n        method: 'GET',\n        url: url,\n    })\n}\n\nexport const getManifest = function (rover: string) {\n    return axios({\n        method: 'GET',\n        url:\n            API_URL +\n            'manifests/' +\n            rover.toLowerCase() +\n            '?api_key=' +\n            (API_KEY || 'DEMO_KEY'),\n    }).then(function ({ data }) {\n        return data.photo_manifest\n    })\n}\n","import './ManifestView.css'\nimport React, { useEffect, useRef } from 'react'\nimport { getManifest } from '../services/photo-service'\nimport { observer } from 'mobx-react'\nimport { navigate } from 'hookrouter'\n\ndeclare global {\n    interface Window {\n        vegaEmbed: any\n    }\n}\n\nconst DebugView = (data) => (\n    <div>\n        <pre>{JSON.stringify(data.data, null, 2)}</pre>\n    </div>\n)\n\nexport const ManifestView = observer(({ manifest, filters }) => {\n    useEffect(() => {\n        getManifest(filters.rover).then((d) => {\n            manifest.set(d)\n        })\n    }, [filters.rover, manifest])\n    const {\n        name,\n        landing_date,\n        launch_date,\n        status,\n        max_sol,\n        max_date,\n        total_photos,\n        photos,\n    } = manifest.data\n    const data = {\n        name,\n        landing_date,\n        launch_date,\n        status,\n        max_sol,\n        max_date,\n        total_photos,\n    }\n    // { photos ? <DebugView data={photos} /> : '' }\n    const chartRef = useRef(null)\n    if (chartRef.current && photos) {\n        const values = photos.map((d) => ({\n            sol: d.sol,\n            date: d.earth_date,\n            value: d.total_photos,\n        }))\n        const spec = {\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            data: { values },\n            config: {\n                background: null,\n            },\n            vconcat: [\n                {\n                    width: 800,\n                    height: 400,\n                    transform: [{ filter: { param: 'brush' } }],\n                    mark: {\n                        type: 'bar',\n                        color: 'rgb(153, 45, 50)',\n                    },\n                    encoding: {\n                        x: {\n                            field: 'sol',\n                            type: 'nominal',\n                            axis: false && {\n                                title: 'Martian Sol',\n                            },\n                        },\n                        y: {\n                            field: 'value',\n                            type: 'quantitative',\n                            axis: {\n                                title: 'Photos',\n                            },\n                        },\n                        tooltip: [\n                            {\n                                field: 'sol',\n                                title: 'Martian Sol',\n                            },\n                            {\n                                field: 'value',\n                                title: 'Photos',\n                            },\n                            {\n                                field: 'date',\n                                title: 'Earth Date',\n                            },\n                        ],\n                    },\n                },\n                {\n                    width: 800,\n                    height: 100,\n                    mark: {\n                        type: 'bar',\n                        color: 'rgb(153, 45, 50)',\n                    },\n                    params: [\n                        {\n                            name: 'brush',\n                            select: { type: 'interval', encodings: ['x'] },\n                        },\n                    ],\n                    encoding: {\n                        x: {\n                            field: 'sol',\n                            type: 'nominal',\n                            axis: false && {\n                                title: 'Martian Sol',\n                            },\n                        },\n                        y: {\n                            field: 'value',\n                            type: 'quantitative',\n                            axis: {\n                                title: 'Photos',\n                            },\n                        },\n                    },\n                },\n            ],\n        }\n        console.log(spec)\n        window\n            .vegaEmbed(chartRef.current, spec, {\n                actions: false,\n                theme: 'dark',\n            })\n            .then(({ view, spec }) => {\n                view.addEventListener('click', (event, item) => {\n                    if (item && item.datum) {\n                        const { sol } = item.datum\n                        if (sol) {\n                            filters.setSol(sol)\n                            navigate('/photos')\n                        }\n                    }\n                })\n            })\n    }\n    // {photos ? `${photos.length} Days` : \"\"}\n    return (\n        <div className=\"Manifest\">\n            <div ref={chartRef}></div>\n            <div style={{ paddingLeft: '1em' }}>\n                <pre>Rover Selected: Curiosity</pre>\n                <pre>Manifest... Loading</pre>\n                <pre>Mission Status... Active</pre>\n                <pre>Most Recent Photo... 2021-03-29</pre>\n                {data.name ? <DebugView data={data} /> : 'Loading...'}\n                <pre>&gt; Select date to view photos</pre>\n            </div>\n        </div>\n    )\n})\n\n// Rover Selected: Perseverance\n\n// Manifest... Loading\n// Mission Status... Active\n// Most Recent Photo... 2018-03-29\n\n// Raw Data...\n","import store from 'store'\nimport { Button } from '@material-ui/core'\nimport { Photo } from '../models/Photo'\nimport { observer } from 'mobx-react'\nimport { usePhotos } from '../services/photo-service'\nimport { useState, useEffect } from 'react'\n\nexport const PhotoView = ({ photo, onClickPhoto }) => {\n    const [backgroundImage, setBackground] = useState('black')\n    const [reveal, setReveal] = useState(false)\n    const src = photo.img_src\n    const img = new window.Image()\n    img.onload = () => {\n        setBackground(`url(${src})`)\n        setReveal(true)\n    }\n    img.src = src\n    return (\n        <div\n            className={`Photo ${reveal ? 'Photo--reveal' : ''}`}\n            style={{ backgroundImage }}\n            onClick={() => onClickPhoto(photo)}\n        >\n            <div className=\"Photo__details\">\n                <div> {photo.rover.name} </div>\n                <div> {photo.rover.missionDates || ''} </div>\n                <div> {photo.camera?.name} </div>\n                <div> {photo.earth_date} </div>\n            </div>\n        </div>\n    )\n}\n\nexport const PhotosView = observer(({ filters }) => {\n    const [page, setPage] = useState<number>(1)\n    const [selectedPhoto, setSelectedPhoto] = useState<Photo | undefined>(\n        undefined\n    )\n    useEffect(() => {\n        setPage(1)\n    }, [filters])\n    const { photos, isLoading } = usePhotos(filters)\n    const selectPhoto = (photo: Photo | undefined) => {\n        setSelectedPhoto(photo)\n        if (photo !== undefined) {\n            const favourites = store.get('favourites ') || []\n            store.set('favourites', [...favourites, photo])\n        }\n    }\n    if (isLoading) {\n        return <div>Loading...</div>\n    }\n    const items = photos.photos\n    console.log({ items, page })\n    const pages = Math.floor(items.length / 6)\n    return (\n        <div className=\"Photos\">\n            {items.length && (\n                <div className=\"Photos__carousel\">\n                    <Button color=\"primary\" onClick={() => setPage(page - 6)}>\n                        Prev\n                    </Button>\n                    <div className=\"Photos__items\">\n                        {items.slice(page, page + 6).map((photo: Photo) => (\n                            <PhotoView\n                                photo={photo}\n                                key={photo.id}\n                                onClickPhoto={selectPhoto}\n                            />\n                        ))}\n                    </div>\n                    <Button color=\"primary\" onClick={() => setPage(page + 6)}>\n                        Next\n                    </Button>\n                </div>\n            )}\n            <div className=\"text-center\" hidden>\n                Page: {Math.floor(page / 6) + 1} / {pages}\n            </div>\n\n            {selectedPhoto ? (\n                <div\n                    className=\"SelectedPhoto\"\n                    onClick={() => selectPhoto(undefined)}\n                >\n                    <div>\n                        <img\n                            src={selectedPhoto.img_src}\n                            alt={'Mars Rover Photo ' + selectedPhoto.id}\n                        />\n                        <div className=\"Photo__details\">\n                            <div> {selectedPhoto.rover.name} </div>\n                            <div>\n                                {' '}\n                                {selectedPhoto.rover.missionDates || ''}{' '}\n                            </div>\n                            <div> {selectedPhoto.camera?.name} </div>\n                            <div> {selectedPhoto.earth_date} </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n        </div>\n    )\n})\n","import './App.css'\nimport Manifest from './store/manifest'\nimport SearchFilters from './store/search-filters'\nimport classNames from 'classnames'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport { FiltersView } from './components/FiltersView'\nimport { ManifestView } from './components/ManifestView'\nimport { Photo } from './models/Photo'\nimport { PhotosView, PhotoView } from './components/PhotosView'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { useRoutes, navigate, A } from 'hookrouter'\n\nconst manifest = new Manifest()\nconst searchFilters = new SearchFilters()\nconst theme = createMuiTheme({\n    palette: { type: 'dark', primary: { main: 'rgb(153, 45, 50)' } },\n})\n\nconst Splash = () => {\n    const clickPhoto = (d) => {\n        searchFilters.setRover(d.rover.name.toLowerCase())\n        navigate('/photos')\n    }\n\n    const rovers: Array<Photo> = [\n        {\n            rover: { name: 'Perseverance', missionDates: '2021' },\n            img_src:\n                'https://mars.nasa.gov/mars2020-raw-images/pub/ods/surface/sol/00044/ids/edr/browse/ncam/NLF_0044_0670852418_793ECM_N0031416NCAM02044_01_295J01_1200.jpg',\n        },\n        {\n            rover: { name: 'Curiosity', missionDates: '2012 - 2021' },\n            img_src:\n                'https://mars.nasa.gov/msl-raw-images/msss/01100/mcam/1100ML0048780060500632E01_DXXX.jpg',\n        },\n        {\n            rover: { name: 'Opportunity', missionDates: '2004 - 2018' },\n            img_src:\n                'https://mars.nasa.gov/mer/gallery/all/1/p/1901/1P296952193EFFA200P2359L1M1-BR.JPG',\n        },\n        {\n            rover: { name: 'Spirit', missionDates: '2004 - 2010' },\n            img_src:\n                'https://mars.nasa.gov/mer/gallery/all/2/n/2017/2N305424848EFFB1E5P1938R0M1-BR.JPG',\n        },\n    ]\n    return (\n        <div className=\"SelectRover\">\n            {rovers.map((d) => (\n                <PhotoView\n                    key={d.img_src}\n                    photo={d}\n                    onClickPhoto={clickPhoto}\n                />\n            ))}\n        </div>\n    )\n}\n\nconst MainView = ({ tab }) => {\n    return (\n        <>\n            <div\n                className={classNames({\n                    View: true,\n                    View__active: tab === 'home',\n                })}\n            >\n                <div className=\"container\">\n                    <Splash />\n                </div>\n            </div>\n            <div\n                className={classNames({\n                    View: true,\n                    View__active: tab === 'manifest',\n                })}\n            >\n                <div className=\"container\">\n                    <FiltersView filters={searchFilters} />\n                    <ManifestView manifest={manifest} filters={searchFilters} />\n                </div>\n            </div>\n            <div\n                className={classNames({\n                    View: true,\n                    View__active: tab === 'photos',\n                })}\n            >\n                <div className=\"container\">\n                    <PhotosView filters={searchFilters} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst NavView = () => (\n    <div className=\"NavView\">\n        <div className=\"container NavView__inner\">\n            <A className=\"NavItem\" href=\"/\">\n                Home\n            </A>\n            <A className=\"NavItem\" href=\"/manifest\">\n                Manifest\n            </A>\n            <A className=\"NavItem\" href=\"/photos\">\n                Photos\n            </A>\n        </div>\n    </div>\n)\n\nconst routes = {\n    '/': () => <MainView tab=\"home\" />,\n    '/manifest': () => <MainView tab=\"manifest\" />,\n    '/photos': () => <MainView tab=\"photos\" />,\n    // '/photos/:id': ({id}) => <PhotoView id={id} />\n}\n\nconst App = () => {\n    const routeResult = useRoutes(routes)\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <header className=\"App__header\">\n                    <div className=\"container\">Mars Rover Photos</div>\n                </header>\n                <div className=\"App__main\">\n                    <NavView />\n                    {routeResult}\n                    <div className=\"container\">\n                        <a\n                            href=\"https://github.com/simon-lang/mars-rover-photos\"\n                            className=\"credit-link\"\n                        >\n                            simon-lang/mars-rover-photos\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nrequire('./index.css')\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}